diff --git a/src/main/java/com/betaChat/chatServer/controller/MessageController.java b/src/main/java/com/betaChat/chatServer/controller/MessageController.java
index 436e027..776840a 100644
--- a/src/main/java/com/betaChat/chatServer/controller/MessageController.java
+++ b/src/main/java/com/betaChat/chatServer/controller/MessageController.java
@@ -18,9 +18,8 @@ public class MessageController {
     private MessageService messageService;
 
     @MessageMapping("create.message")
-    public Mono<Void> sendMessage(Mono<MessageRequest> request){
-         messageService.saveMessage(request).subscribe();
-         return Mono.empty();
+    public Mono<Message> sendMessage(Mono<MessageRequest> request){
+         return messageService.saveMessage(request);
     }
 
     @MessageMapping("list.messages")
diff --git a/src/main/java/com/betaChat/chatServer/service/MessageService.java b/src/main/java/com/betaChat/chatServer/service/MessageService.java
index 96ba815..7b56e63 100644
--- a/src/main/java/com/betaChat/chatServer/service/MessageService.java
+++ b/src/main/java/com/betaChat/chatServer/service/MessageService.java
@@ -7,7 +7,6 @@ import com.betaChat.chatServer.repository.MessageRepository;
 
 import com.betaChat.chatServer.repository.UserRepository;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.messaging.rsocket.RSocketRequester;
 import org.springframework.stereotype.Service;
 import reactor.core.publisher.Flux;
 import reactor.core.publisher.Mono;
@@ -21,25 +20,16 @@ public class MessageService {
     @Autowired
     private UserRepository userRepository;
 
-    private RSocketRequester rSocketRequester;
-    @Autowired
-    public void ChangeNotificationService(RSocketRequester.Builder rSocketRequesterBuilder) {
-        this.rSocketRequester = rSocketRequesterBuilder.connectTcp("localhost", 4200).block();
-    }
-
+    
     public MessageService(MessageRepository messageRepository) {
         this.messageRepository = messageRepository;
     }
 
     public Flux<Message> getAllMessages() {
         Flux<Message> messagesList = messageRepository.findAllByOrderByCreatedAtDesc();
-        messagesList.subscribe(this::notifyClients);
         return messagesList;
     }
 
-    public void notifyClients(Object data) {
-        rSocketRequester.route("list.messages").data(data).send().subscribe();
-    }
 
     public Mono<Message> saveMessage(Mono<MessageRequest> request) {
         return request.flatMap(messageRequest -> {
@@ -51,7 +41,6 @@ public class MessageService {
                 message.setBody(messageRequest.getBody());
                 message.setCreatedAt(new Date());
                 message.setUpdatedAt(new Date());
-                this.notifyClients(message);
                 return messageRepository.save(message);
             });
         });
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
index d65284e..8eba5c5 100644
--- a/src/main/resources/application.properties
+++ b/src/main/resources/application.properties
@@ -2,4 +2,4 @@ spring.rsocket.server.port=1409
 # websocket is chosen as a transport
 spring.rsocket.server.transport=websocket
 
-spring.data.mongodb.uri=mongodb://localhost:27017/chat_application
\ No newline at end of file
+spring.data.mongodb.uri=mongodb://localhost:27018/chat_application
\ No newline at end of file
